// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/me": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get the current authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get auth user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.UserRespOKDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.RespErrDTO"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "get": {
                "description": "Refresh access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Refresh token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Send refresh token method",
                        "name": "method",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.TokenRespOKDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.RespErrDTO"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.DetailRespErrDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.DetailRespErrDTO"
                        }
                    }
                }
            }
        },
        "/auth/signin": {
            "post": {
                "description": "Login user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Sign in",
                "parameters": [
                    {
                        "description": "Sign in user",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.SigninDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.SignInRespOKDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.ValidationRespErrDTO"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.RespErrDTO"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.RespErrDTO"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.DetailRespErrDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.DetailRespErrDTO"
                        }
                    }
                }
            }
        },
        "/auth/signout": {
            "get": {
                "description": "Logout user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Sign out",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.RespOKDTO"
                        }
                    }
                }
            }
        },
        "/auth/signup": {
            "post": {
                "description": "Register new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Sign up",
                "parameters": [
                    {
                        "description": "Sign up user",
                        "name": "user_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.SignupDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.UserRespOKDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.ValidationRespErrDTO"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.DetailRespErrDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.DetailRespErrDTO"
                        }
                    }
                }
            }
        },
        "/auth/{provider}/callback": {
            "get": {
                "description": "Sing in by OAuth provider (google/github/discord)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Sign in OAuth",
                "parameters": [
                    {
                        "type": "string",
                        "description": "OAuth code",
                        "name": "code",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "google",
                            "discord",
                            "github"
                        ],
                        "type": "string",
                        "description": "OAuth provider",
                        "name": "provider",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.SignInRespOKDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.RespErrDTO"
                        }
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.DetailRespErrDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.DetailRespErrDTO"
                        }
                    }
                }
            }
        },
        "/auth/{provider}/url": {
            "get": {
                "description": "Get OAuth url from provider (google/github/discord)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get OAuth url",
                "parameters": [
                    {
                        "enum": [
                            "google",
                            "discord",
                            "github"
                        ],
                        "type": "string",
                        "description": "OAuth provider",
                        "name": "provider",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.URLRespOKDTO"
                        }
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.DetailRespErrDTO"
                        }
                    }
                }
            }
        },
        "/product/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all products",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Get products",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.ProductsRespOKDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.DetailRespErrDTO"
                        }
                    }
                }
            }
        },
        "/product/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Create new product",
                "parameters": [
                    {
                        "description": "product data",
                        "name": "product_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.NewProductDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.ProductRespOKDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.ValidationRespErrDTO"
                        }
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.RespErrDTO"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.DetailRespErrDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.DetailRespErrDTO"
                        }
                    }
                }
            }
        },
        "/user/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.UsersRespOKDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.DetailRespErrDTO"
                        }
                    }
                }
            }
        },
        "/user/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Create user",
                "parameters": [
                    {
                        "description": "user data",
                        "name": "user_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.NewUserDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.UserRespOKDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.ValidationRespErrDTO"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.DetailRespErrDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.DetailRespErrDTO"
                        }
                    }
                }
            }
        },
        "/user/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "string",
                        "example": "3afc3021-9395-11ed-a8b6-d8bbc1a27045",
                        "description": "user uuid",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.UserRespOKDTO"
                        }
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.RespErrDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.DetailRespErrDTO"
                        }
                    }
                }
            }
        },
        "/user/get/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get user",
                "parameters": [
                    {
                        "type": "string",
                        "example": "3afc3021-9395-11ed-a8b6-d8bbc1a27045",
                        "description": "user uuid",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.UserRespOKDTO"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.DetailRespErrDTO"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.RespErrDTO"
                        }
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.RespErrDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.DetailRespErrDTO"
                        }
                    }
                }
            }
        },
        "/user/update/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Upadate existing user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "type": "string",
                        "example": "3afc3021-9395-11ed-a8b6-d8bbc1a27045",
                        "description": "user uuid",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "user data",
                        "name": "user_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.UpdateUserDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.UserRespOKDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.ValidationRespErrDTO"
                        }
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.RespErrDTO"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.DetailRespErrDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.DetailRespErrDTO"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_ZaphCode_clean-arch_src_api_dtos.DetailRespErrDTO": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string",
                    "example": "error querying the database"
                },
                "message": {
                    "type": "string",
                    "example": "something went wrong"
                },
                "status": {
                    "type": "string",
                    "example": "failure"
                }
            }
        },
        "github_com_ZaphCode_clean-arch_src_api_dtos.NewProductDTO": {
            "type": "object",
            "required": [
                "description",
                "discount_rate",
                "images_url",
                "name",
                "price",
                "tags"
            ],
            "properties": {
                "avalible": {
                    "type": "boolean"
                },
                "category": {
                    "type": "string",
                    "example": "clothes"
                },
                "description": {
                    "type": "string",
                    "maxLength": 200,
                    "minLength": 4,
                    "example": "The best T-shirt in the world."
                },
                "discount_rate": {
                    "type": "number",
                    "maximum": 100,
                    "minimum": 0,
                    "example": 23.4
                },
                "images_url": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "https://example.com/image1.png",
                        "https://example.com/image2.png"
                    ]
                },
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 4,
                    "example": "Black T-Shirt Addidas"
                },
                "price": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 2599
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "t-shirts",
                        "clothes",
                        "addidas"
                    ]
                }
            }
        },
        "github_com_ZaphCode_clean-arch_src_api_dtos.NewUserDTO": {
            "type": "object",
            "required": [
                "age",
                "email",
                "password",
                "username"
            ],
            "properties": {
                "age": {
                    "type": "integer",
                    "minimum": 15,
                    "example": 20
                },
                "email": {
                    "type": "string",
                    "example": "john@gmail.com"
                },
                "image_url": {
                    "type": "string",
                    "example": "https://nwdistrict.ifas.ufl.edu/nat/files/2021/01/Groundhog.jpg"
                },
                "password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "password123"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "user",
                        "moderator"
                    ],
                    "example": "user"
                },
                "username": {
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 4,
                    "example": "John Doe"
                },
                "verified_email": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "github_com_ZaphCode_clean-arch_src_api_dtos.ProductDTO": {
            "type": "object",
            "required": [
                "description",
                "discount_rate",
                "images_url",
                "name",
                "price",
                "tags"
            ],
            "properties": {
                "avalible": {
                    "type": "boolean"
                },
                "category": {
                    "type": "string",
                    "example": "clothes"
                },
                "created_at": {
                    "type": "integer",
                    "example": 1674405183
                },
                "description": {
                    "type": "string",
                    "maxLength": 200,
                    "minLength": 4,
                    "example": "The best T-shirt in the world."
                },
                "discount_rate": {
                    "type": "number",
                    "maximum": 100,
                    "minimum": 0,
                    "example": 23.4
                },
                "id": {
                    "type": "string",
                    "example": "8ded83fe-93c8-11ed-ab0f-d8bbc1a27048"
                },
                "images_url": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "https://example.com/image1.png",
                        "https://example.com/image2.png"
                    ]
                },
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 4,
                    "example": "Black T-Shirt Addidas"
                },
                "price": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 2599
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "t-shirts",
                        "clothes",
                        "addidas"
                    ]
                },
                "updated_at": {
                    "type": "integer",
                    "example": 1674405181
                }
            }
        },
        "github_com_ZaphCode_clean-arch_src_api_dtos.ProductRespOKDTO": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.ProductDTO"
                },
                "message": {
                    "type": "string",
                    "example": "Data retrived!"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "github_com_ZaphCode_clean-arch_src_api_dtos.ProductsRespOKDTO": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.ProductDTO"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Data retrived!"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "github_com_ZaphCode_clean-arch_src_api_dtos.RespErrDTO": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "something went wrong"
                },
                "status": {
                    "type": "string",
                    "example": "failure"
                }
            }
        },
        "github_com_ZaphCode_clean-arch_src_api_dtos.RespOKDTO": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Data retrived!"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "github_com_ZaphCode_clean-arch_src_api_dtos.SignInRespOKDTO": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "access_token": {
                            "type": "string",
                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                        },
                        "refresh_token": {
                            "type": "string",
                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxNDE0NTYzNiIsIm5hbWUiOiJKb2huIERvZSIsImlhdCI6MTUxNjIzOTAyMn0.Bl1Rpmk-BrbqtgJA6F9pTAuiOlaPLpdDQ7MJvZ7URSU"
                        },
                        "user": {
                            "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.UserDTO"
                        }
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Data retrived!"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "github_com_ZaphCode_clean-arch_src_api_dtos.SigninDTO": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "zaph@fapi.com"
                },
                "password": {
                    "type": "string",
                    "example": "menosfapi33"
                }
            }
        },
        "github_com_ZaphCode_clean-arch_src_api_dtos.SignupDTO": {
            "type": "object",
            "required": [
                "age",
                "email",
                "password",
                "username"
            ],
            "properties": {
                "age": {
                    "type": "integer",
                    "minimum": 15,
                    "example": 18
                },
                "email": {
                    "type": "string",
                    "example": "john@gmain.com"
                },
                "password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "password"
                },
                "username": {
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 4,
                    "example": "John doe"
                }
            }
        },
        "github_com_ZaphCode_clean-arch_src_api_dtos.TokenRespOKDTO": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                },
                "message": {
                    "type": "string",
                    "example": "Data retrived!"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "github_com_ZaphCode_clean-arch_src_api_dtos.URLRespOKDTO": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string",
                    "example": "https://google.com/oauth/pulse"
                },
                "message": {
                    "type": "string",
                    "example": "Data retrived!"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "github_com_ZaphCode_clean-arch_src_api_dtos.UpdateUserDTO": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer",
                    "minimum": 15,
                    "example": 20
                },
                "image_url": {
                    "type": "string",
                    "example": "https://nwdistrict.ifas.ufl.edu/nat/files/2021/01/Groundhog.jpg"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "user",
                        "moderator"
                    ],
                    "example": "user"
                },
                "username": {
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 4,
                    "example": "John Doe"
                },
                "verified_email": {
                    "type": "boolean"
                }
            }
        },
        "github_com_ZaphCode_clean-arch_src_api_dtos.UserDTO": {
            "type": "object",
            "required": [
                "age",
                "email",
                "password",
                "username"
            ],
            "properties": {
                "age": {
                    "type": "integer",
                    "minimum": 15,
                    "example": 20
                },
                "created_at": {
                    "type": "integer",
                    "example": 1674405183
                },
                "customer_id": {
                    "type": "string"
                },
                "email": {
                    "type": "string",
                    "example": "john@gmail.com"
                },
                "id": {
                    "type": "string",
                    "example": "8ded83fe-93c8-11ed-ab0f-d8bbc1a27048"
                },
                "image_url": {
                    "type": "string",
                    "example": "https://nwdistrict.ifas.ufl.edu/nat/files/2021/01/Groundhog.jpg"
                },
                "password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "password123"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "user",
                        "moderator"
                    ],
                    "example": "user"
                },
                "updated_at": {
                    "type": "integer",
                    "example": 1674405181
                },
                "username": {
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 4,
                    "example": "John Doe"
                },
                "verified_email": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "github_com_ZaphCode_clean-arch_src_api_dtos.UserRespOKDTO": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.UserDTO"
                },
                "message": {
                    "type": "string",
                    "example": "Data retrived!"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "github_com_ZaphCode_clean-arch_src_api_dtos.UsersRespOKDTO": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_ZaphCode_clean-arch_src_api_dtos.UserDTO"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Data retrived!"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "github_com_ZaphCode_clean-arch_src_api_dtos.ValidationRespErrDTO": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "field": {
                                "type": "string",
                                "example": "Email"
                            },
                            "message": {
                                "type": "string",
                                "example": "invalid email"
                            }
                        }
                    }
                },
                "message": {
                    "type": "string",
                    "example": "one or more field are invalid"
                },
                "status": {
                    "type": "string",
                    "example": "failure"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "X-Access-Token",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.6.9",
	Host:             "localhost:9000",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Swagger Example API",
	Description:      "This is a sample server celler server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
